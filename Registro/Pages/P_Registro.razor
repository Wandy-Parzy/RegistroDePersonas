@page "/P_Registro"
@inject PersonaBLL personaBLL

<EditForm Model="ocupacion" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="card">
        <div class="card-header">
            <h3>P_Registro</h3>
        </div>
        <div class="card-body">

            @*OcupacionId*@
            <div class="form-r ow align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>OcupacionId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="ocupacion.OcupacionId" class="form-control col-4" />
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @*Descripcion*@
            <div class="form-group">
                <label>Descripcion</label>
                <InputText @bind-Value="ocupacion.Descripcion" class="form-control" />
                <ValidationMessage For="@(() => ocupacion.Descripcion)" />
            </div>

            @*Salario*@
            <div class="form-group">
                <label>Salario</label>
                <InputNumber @bind-Value="ocupacion.Salario" class="form-control" />
                <ValidationMessage For="@(() => ocupacion.Salario)" />
            </div>
            
     

        </div>
        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                <button type="submit" class="btn btn-lg btn-success">Guardar</button>
                <button type="submit" class="btn btn-lg btn-success">Editar</button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">Eliminar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {

   [Parameter]

    public Ocupaciones ocupacion { get; set; } = new Ocupaciones();
    public Persona personas { get; set; } = new Persona();

    public List<Ocupaciones> lista = new List<Ocupaciones>();
    public int OcupacionId { get; set; }

    public int personaId { get; set; }
    public string Filtro { get; set; } = "";
    public string Criterio { get; set; } = "";


    protected override void OnInitialized()
    {
        if (personaId > 0)
        {
            //si recibimos una {OcupacionId:int} por parametro asignarla
            // y luego buscarla para que se vea en pantalla
            this.personas.PersonaId = personaId;
            this.Buscar();

        }
        lista=personaBLL.GetOcupaciones(c => true);
    }

    public void Nuevo()
    {
        personas = new Persona();
    }

    bool Validar()
    {
        return personas.Nombre.Contains(".");
    }

    public void Guardar()
    {

        bool guardo = personaBLL.Guardar1(personas);

        if (guardo)
        {

            Nuevo();
        }
    }
    bool Validar1()
    {
        return personas.Nombre.Contains(".");
    }

    public void Guardar1()
    {

        bool guardo = personaBLL.Guardar1(personas);

        if (guardo)
        {
            Nuevo();
        }
    }
    private void Buscar()
    {
        if (personas.PersonaId > 0 || ocupacion.OcupacionId > 0)
        {
            var encontrado = personaBLL.Buscar1(personas.PersonaId);

            if (encontrado != null)
                this.personas = encontrado;
        }
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = personaBLL.Eliminar1(personas);

        if (elimino)
        {
            Nuevo();
        }
    }

    public void Editar()
    {

        var editar = personaBLL.Editar(personas);

    }

}